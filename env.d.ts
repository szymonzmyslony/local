/* eslint-disable */
// Generated by Wrangler by running `wrangler types env.d.ts --include-runtime false` (hash: aa60745a2ccd42ddd3e837ee599b7231)
declare namespace Cloudflare {
	interface GlobalProps {
		mainModule: typeof import("./src/server");
		durableNamespaces: "CoordinatorAgent" | "GalleryAgent";
	}
	interface Env {
		OPENAI_API_KEY: string;
		FIRECRAWL_API_KEY: string;
		SUPABASE_URL: string;
		SUPABASE_ANON_KEY: string;
		CoordinatorAgent: DurableObjectNamespace<import("./src/server").CoordinatorAgent>;
		GalleryAgent: DurableObjectNamespace<import("./src/server").GalleryAgent>;
		AI: Ai;
		CRAWLER_WORKFLOW: Workflow<Parameters<import("./src/server").CrawlerWorkflow['run']>[0]['payload']>;
		GALLERY_INFO_WORKFLOW: Workflow<Parameters<import("./src/server").GalleryInfoWorkflow['run']>[0]['payload']>;
		ARTIST_EXTRACTION_WORKFLOW: Workflow<Parameters<import("./src/server").ArtistExtractionWorkflow['run']>[0]['payload']>;
		EVENT_EXTRACTION_WORKFLOW: Workflow<Parameters<import("./src/server").EventExtractionWorkflow['run']>[0]['payload']>;
		EXTRACTION_QUEUE: Queue<import("./src/types/jobs").ExtractionJob>;
	}
}
interface Env extends Cloudflare.Env {}
type StringifyValues<EnvType extends Record<string, unknown>> = {
	[Binding in keyof EnvType]: EnvType[Binding] extends string ? EnvType[Binding] : string;
};
declare namespace NodeJS {
	interface ProcessEnv extends StringifyValues<Pick<Cloudflare.Env, "OPENAI_API_KEY" | "FIRECRAWL_API_KEY">> {}
}
